# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  desc "Обновление сертификатов и провиженов в репозитории"
  lane :updateCertificates do
    matchWithType("appstore", false)
    matchWithType("development", false)
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do
    get_certificates           # invokes cert
    get_provisioning_profile
    increment_build_number
    # increment_build_number(build_number: getBuild("WriteMe"))

	
    gym(
       scheme: "WriteMe",
       #workspace: "WriteMe.xcworkspace",
       export_method: "app-store",
       export_options: {
          method: "app-store",
          provisioningProfiles: {
             "swiftment.work.writeme" => "match AppStore swiftment.work.writeme",
          },
          signingStyle: "manual"
       },
       clean: true,
       output_directory: "build"
      )
      testflight(ipa: "build/WriteMe.ipa", skip_waiting_for_build_processing: true)
      clean_build_artifacts
      #build_app(xcargs: "-allowProvisioningUpdates")
    # build_app(scheme: "WriteMe")
    # upload_to_testflight
  end

  desc "Push a new beta build to AppStore"
  lane :appstore do
    get_certificates           # invokes cert
    get_provisioning_profile
    increment_build_number
    # increment_build_number(build_number: getBuild("WriteMe"))

	
    gym(
       scheme: "WriteMe",
       #workspace: "WriteMe.xcworkspace",
       export_method: "app-store",
       export_options: {
          method: "app-store",
          provisioningProfiles: {
             "swiftment.work.writeme" => "match AppStore swiftment.work.writeme",
          },
          signingStyle: "manual"
       },
       clean: true,
       output_directory: "build"
      )
      appstore(ipa: "build/WriteMe.ipa", skip_waiting_for_build_processing: true)
      clean_build_artifacts
      #build_app(xcargs: "-allowProvisioningUpdates")
    # build_app(scheme: "WriteMe")
    # upload_to_testflight
  end
end
