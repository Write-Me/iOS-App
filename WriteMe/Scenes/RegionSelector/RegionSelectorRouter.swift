//
//  RegionSelectorRouter.swift
//  WriteMe
//
//  Created by Vladimir Mikhaylov on 03.10.2020.
//  Copyright (c) 2020 Vladimir Mikhaylov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol RegionSelectorRoutingLogic
{
    func routeToSettings()
    func routeToRegionAdd()
}

protocol RegionSelectorDataPassing
{
    var dataStore: RegionSelectorDataStore? { get }
}

class RegionSelectorRouter: NSObject, RegionSelectorRoutingLogic, RegionSelectorDataPassing
{
    
    weak var viewController: RegionSelectorViewController?
    var dataStore: RegionSelectorDataStore?
    
    // MARK: Routing
    
    func routeToSettings()
    {
        guard let viewController = viewController else { return }
        passDataToSettings(source: viewController)
        navigateToSettings(source: viewController)
    }
    
    func routeToRegionAdd()
    {
        guard let viewController = viewController else { return }
        let regionAdd = RegionAddViewController()
        passDataToRegionAdd(source: viewController, destination: regionAdd)
        navigateToRegionAdd(source: viewController, destination: regionAdd)
    }
    
    // MARK: Navigation
    
    private func navigateToSettings(source: RegionSelectorViewController?)
    {
        source?.navigationController?.popViewController(animated: true)
    }
    
    private func navigateToRegionAdd(source: RegionSelectorViewController, destination: RegionAddViewController)
    {
        source.navigationController?.pushViewController(destination, animated: true)
    }
    
    // MARK: Passing data
    private func passDataToSettings(source: RegionSelectorViewController)
    {
        source.settingsViewController?.interactor?.loadSettings(SettingsModel.ApplySettings.Request())
    }
    
    private func passDataToRegionAdd(source: RegionSelectorViewController, destination: RegionAddViewController)
    {
    }
}
