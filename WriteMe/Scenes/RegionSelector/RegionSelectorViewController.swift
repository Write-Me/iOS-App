//
//  RegionSelectorViewController.swift
//  WriteMe
//
//  Created by Vladimir Mikhaylov on 03.10.2020.
//  Copyright (c) 2020 Vladimir Mikhaylov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RegionSelectorDisplayLogic: class {
    func fetchRegions(viewModel: RegionSelector.FetchRegion.ViewModel)
    func saveRegion(viewModel: RegionSelector.SaveRegion.ViewModel)
}

class RegionSelectorViewController: UIViewController, RegionSelectorDisplayLogic {
    internal lazy var contentView = RegionView()
    var interactor: RegionSelectorBusinessLogic?
    var router: (NSObjectProtocol & RegionSelectorRoutingLogic & RegionSelectorDataPassing)?
    var settingsViewController: SettingsOLDViewController?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = RegionSelectorInteractor()
        let presenter = RegionSelectorPresenter()
        let router = RegionSelectorRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
        contentView.viewController = viewController
        setupView()
    }

    private func setupView() {
        view.backgroundColor = UIColor(named: "background")
        navigationController?.navigationBar.prefersLargeTitles = false
        navigationItem.title = NSLocalizedString("RegionSelect", comment: "")
        navigationItem.rightBarButtonItem = UIBarButtonItem(image: UIImage(systemName: "plus"),
                                                            style: .plain,
                                                            target: self ,
                                                            action: #selector(openRegionAdd))
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View lifecycle

    override func loadView() {
        view = contentView
    }

    override func viewDidLoad() {
        super.viewDidLoad()

    }

    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        loadRegions()
    }

    func loadRegions() {
        let request = RegionSelector.FetchRegion.Request()
        interactor?.fetchRegions(reguest: request)
    }

    func fetchRegions(viewModel: RegionSelector.FetchRegion.ViewModel) {
        contentView.setupData(regions: viewModel.regions)
    }

    func saveRegion(viewModel: RegionSelector.SaveRegion.ViewModel) {
        router?.routeToSettings()
    }

    @objc private func openRegionAdd() {
        router?.routeToRegionAdd()
    }
}
